{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scypr\\\\OneDrive\\\\Documents\\\\Work\\\\Coding\\\\Unit Converter\\\\unit-converter-app\\\\src\\\\components\\\\unit-category-options.js\";\nimport React from 'react';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitCategoryOptions = _ref => {\n  let {\n    radioValue,\n    setRadioValue,\n    setCurrentUnits\n  } = _ref;\n  const radios = [{\n    name: 'Temperature',\n    value: 1\n  }, {\n    name: 'Length',\n    value: 2\n  }, {\n    name: 'Area',\n    value: 3\n  }, {\n    name: 'Weight',\n    value: 4\n  }, {\n    name: 'Volume',\n    value: 5\n  }, {\n    name: 'Currency',\n    value: 6\n  }, {\n    name: 'Time',\n    value: 7\n  }, {\n    name: 'Speed',\n    value: 8\n  }, {\n    name: 'Power',\n    value: 9\n  }, {\n    name: 'Angle',\n    value: 10\n  }, {\n    name: 'Data',\n    value: 11\n  }, {\n    name: 'Fuel',\n    value: 12\n  }];\n\n  /* define lists here with units for each unit category */\n\n  const units = {\n    'Temperature': ['Celsius', 'Farenheit', 'Kelvin'],\n    'Length': ['option1', 'option2', 'option3'],\n    'Area': ['option1', 'option2', 'option3'],\n    'Weight': ['option1', 'option2', 'option3'],\n    'Volume': ['option1', 'option2', 'option3'],\n    'Currency': ['option1', 'option2', 'option3'],\n    'Time': ['Seconds', 'Minutes', 'Hours', 'Days', 'Weeks', 'Months', 'Years'],\n    'Speed': ['option1', 'option2', 'option3'],\n    'Power': ['option1', 'option2', 'option3'],\n    'Angle': ['option1', 'option2', 'option3'],\n    'Data': ['option1', 'option2', 'option3'],\n    'Fuel': ['option1', 'option2', 'option3']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    style: {\n      backgroundColor: '#D9D9D9',\n      overflowX: 'scroll'\n    },\n    children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"bg-white\",\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: radioValue === radio.value ? 'primary' : 'outline-primary',\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: event => {\n          console.log(event.currentTarget.name);\n          setRadioValue(event.currentTarget.value);\n          setCurrentUnits(units[radio.name]);\n        },\n        className: \"unit-category\",\n        children: [radio.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = UnitCategoryOptions;\nexport default UnitCategoryOptions;\nvar _c;\n$RefreshReg$(_c, \"UnitCategoryOptions\");","map":{"version":3,"names":["React","ButtonGroup","ToggleButton","UnitCategoryOptions","radioValue","setRadioValue","setCurrentUnits","radios","name","value","units","backgroundColor","overflowX","map","radio","idx","event","console","log","currentTarget"],"sources":["C:/Users/scypr/OneDrive/Documents/Work/Coding/Unit Converter/unit-converter-app/src/components/unit-category-options.js"],"sourcesContent":["import React from 'react';\r\nimport { ButtonGroup, ToggleButton} from 'react-bootstrap';\r\n\r\n\r\nconst UnitCategoryOptions = ({radioValue, setRadioValue, setCurrentUnits}) => {\r\n\r\n    const radios = [\r\n        { name: 'Temperature', value: 1 },\r\n        { name: 'Length', value: 2 },\r\n        { name: 'Area', value: 3 },\r\n        { name: 'Weight', value: 4 },\r\n        { name: 'Volume', value: 5 },\r\n        { name: 'Currency', value: 6 },\r\n        { name: 'Time', value: 7 },\r\n        { name: 'Speed', value: 8 },\r\n        { name: 'Power', value: 9 },\r\n        { name: 'Angle', value: 10 },\r\n        { name: 'Data', value: 11 },\r\n        { name: 'Fuel', value: 12 },\r\n      ];\r\n\r\n      /* define lists here with units for each unit category */\r\n    \r\n      const units = {\r\n        'Temperature': ['Celsius', 'Farenheit', 'Kelvin'],\r\n        'Length': ['option1', 'option2', 'option3'],\r\n        'Area': ['option1', 'option2', 'option3'],\r\n        'Weight': ['option1', 'option2', 'option3'],\r\n        'Volume': ['option1', 'option2', 'option3'],\r\n        'Currency': ['option1', 'option2', 'option3'],\r\n        'Time': ['Seconds', 'Minutes', 'Hours', 'Days', 'Weeks', 'Months', 'Years'],\r\n        'Speed': ['option1', 'option2', 'option3'],\r\n        'Power': ['option1', 'option2', 'option3'],\r\n        'Angle': ['option1', 'option2', 'option3'],\r\n        'Data': ['option1', 'option2', 'option3'],\r\n        'Fuel': ['option1', 'option2', 'option3']\r\n\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center' style={{backgroundColor: '#D9D9D9', overflowX: 'scroll'}}>\r\n        <ButtonGroup className='bg-white'>\r\n            {radios.map((radio, idx) => (\r\n                <ToggleButton\r\n                    key={idx}\r\n                    id={`radio-${idx}`}\r\n                    type='radio'\r\n                    variant={radioValue === radio.value ? 'primary' : 'outline-primary'}\r\n                    name='radio'\r\n                    value={radio.value}\r\n                    checked={radioValue === radio.value}\r\n                    onChange={event => {\r\n                        console.log(event.currentTarget.name)\r\n                        setRadioValue(event.currentTarget.value)\r\n                        setCurrentUnits(units[radio.name])\r\n                    }}\r\n                    className='unit-category'\r\n                >\r\n                    {radio.name}\r\n                    <br></br>\r\n\r\n                </ToggleButton>\r\n\r\n            ))}\r\n        </ButtonGroup>\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default UnitCategoryOptions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}