{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scypr\\\\OneDrive\\\\Documents\\\\Work\\\\Coding\\\\Unit Converter\\\\unit-converter-app\\\\src\\\\components\\\\unit-category-options.js\";\nimport React from 'react';\nimport { Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartArea, faClock, faFlask, faGaugeHigh, faRulerCombined, faSterlingSign, faTemperatureHalf, faWeightHanging, faBolt, faAngleRight, faServer, faGasPump } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitCategoryOptions = _ref => {\n  let {\n    categoryValue,\n    setCategoryValue,\n    setCurrentUnits\n  } = _ref;\n  const handleClick = option => {\n    setCategoryValue(option.name);\n    setCurrentUnits(units[option.name]);\n  };\n  const UnitOption = _ref2 => {\n    let {\n      option\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"unit-option\",\n      onClick: () => handleClick(option),\n      xs: 2,\n      sm: 2,\n      md: 2,\n      lg: 1,\n      style: {\n        backgroundColor: option.name === categoryValue ? '#005ec2' : '#fff',\n        color: option.name === categoryValue ? '#fff' : '#000'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: option.icon,\n        size: \"lg\",\n        style: {\n          fontSize: '30px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), option.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n  const options = [{\n    name: 'Temperature',\n    value: 1,\n    icon: faTemperatureHalf\n  }, {\n    name: 'Length',\n    value: 2,\n    icon: faRulerCombined\n  }, {\n    name: 'Area',\n    value: 3,\n    icon: faChartArea\n  }, {\n    name: 'Weight',\n    value: 4,\n    icon: faWeightHanging\n  }, {\n    name: 'Volume',\n    value: 5,\n    icon: faFlask\n  }, {\n    name: 'Currency',\n    value: 6,\n    icon: faSterlingSign\n  }, {\n    name: 'Time',\n    value: 7,\n    icon: faClock\n  }, {\n    name: 'Speed',\n    value: 8,\n    icon: faGaugeHigh\n  }, {\n    name: 'Power',\n    value: 9,\n    icon: faBolt\n  }, {\n    name: 'Angle',\n    value: 10,\n    icon: faAngleRight\n  }, {\n    name: 'Data',\n    value: 11,\n    icon: faServer\n  }, {\n    name: 'Fuel',\n    value: 12,\n    icon: faGasPump\n  }];\n\n  /* define lists here with units for each unit category */\n\n  const units = {\n    'Temperature': ['Celsius', 'Farenheit', 'Kelvin'],\n    'Length': ['Meter', 'Kilometer', 'Centimeter', 'Millimeter', 'Inch', 'Foot', 'Yard', 'Mile', 'Nautical Mile', 'Nanometre'],\n    'Area': ['Square Metre', 'Square Kilometer', 'Square Inch', 'Square Foot', 'Square Yard', 'Square Mile', 'Acre', 'Hectare'],\n    'Weight': ['Miligram', 'Gram', 'Kilogram', 'Tonne', 'Ounce', 'Pound', 'Stone', 'Short Ton', 'Metric Ton'],\n    'Volume': ['Cubic Meter', 'Cubic Centimeter', 'Cubic Millimeter', 'Cubic Inch', 'Cubic Foot', 'Cubic Yard', 'Milliliter', 'Liter', 'Kiloliter', 'Dal', 'Peck', 'Gallon', 'Barrel', 'Hogshead', 'Butt', 'Tun'],\n    'Currency': ['United States Dollar (USD)', 'Euro (EUR)', 'Japanese Yen (JPY)', 'British Pound (GBP)', 'Australian Dollar (AUD)', 'Canadian Dollar (CAD)', 'Swiss Franc (CHF)', 'Chinese Yuan Renminbi (CNY)', 'Indian Rupee (INR)', 'Brazilian Real (BRL)', 'Russian Ruble (RUB)', 'Mexican Peso (MXN)'],\n    'Time': ['Nanosecond (ns)', 'Microsecond (µs)', 'Millisecond (ms)', 'Second (s)', 'Minute (min)', 'Hour (h)', 'Day (d)', 'Week (wk)', 'Month (mo)', 'Year (yr)', 'Decade', 'Century', 'Millennium'],\n    'Speed': ['Meters per Second (m/s)', 'Kilometers per Hour (km/h)', 'Miles per Hour (mph)', 'Feet per Second (fps)', 'Knots', 'Mach'],\n    'Power': ['Watts (W)', 'Kilowatts (kW)', 'Megawatts (MW)', 'Gigawatts (GW)', 'Terawatts (TW)', 'Petawatts (PW)', 'Exawatts (EW)', 'Zettawatt (ZW)', 'Yottawatts (YW)'],\n    'Angle': ['Degree (°)', 'Minute (′)', 'Second (″)', 'Radian (rad)', 'Gradian (grad)', 'Turn (t)', 'Revolution (rev)'],\n    'Data': ['Bit', 'Byte', 'Kilobyte (KB)', 'Megabyte (MB)', 'Gigabyte (GB)', 'Terabyte (TB)', 'Petabyte (PB)', 'Exabyte (EB)', 'Zettabyte (ZB)', 'Yottabyte (YB)'],\n    'Fuel': ['Gallon (gal)', 'Barrel (bbl)', 'Cubic Meter (m³)', 'Liter (L)', 'Kiloliter (KL)', 'Ton (t)', 'British Thermal Unit (BTU)', 'Joule (J)', 'Therm (thm)', 'Megawatt-hour (MWh)', 'Gigawatt-hour (GWh)', 'Terawatt-hour (TWh)', 'Petawatt-hour (PWh)']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    style: {\n      backgroundColor: '#D9D9D9',\n      overflowX: \"scroll\"\n    },\n    children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(UnitOption, {\n      option: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_c = UnitCategoryOptions;\nexport default UnitCategoryOptions;\nvar _c;\n$RefreshReg$(_c, \"UnitCategoryOptions\");","map":{"version":3,"names":["React","Col","FontAwesomeIcon","faChartArea","faClock","faFlask","faGaugeHigh","faRulerCombined","faSterlingSign","faTemperatureHalf","faWeightHanging","faBolt","faAngleRight","faServer","faGasPump","UnitCategoryOptions","categoryValue","setCategoryValue","setCurrentUnits","handleClick","option","name","units","UnitOption","backgroundColor","color","icon","fontSize","marginBottom","options","value","overflowX","map","idx"],"sources":["C:/Users/scypr/OneDrive/Documents/Work/Coding/Unit Converter/unit-converter-app/src/components/unit-category-options.js"],"sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartArea, faClock, faFlask, faGaugeHigh, faRulerCombined, faSterlingSign, faTemperatureHalf, faWeightHanging, faBolt, faAngleRight, faServer, faGasPump } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst UnitCategoryOptions = ({categoryValue, setCategoryValue, setCurrentUnits}) => {\r\n\r\n\r\n    \r\n    const handleClick = (option) => {\r\n        setCategoryValue(option.name)\r\n        setCurrentUnits(units[option.name])\r\n    }\r\n\r\n    const UnitOption = ({option}) => {\r\n        return (\r\n            <Col className='unit-option' onClick={() => \r\n                handleClick(option)}\r\n                xs={2} sm={2} md={2} lg={1} style={{\r\n                backgroundColor: option.name === categoryValue ? '#005ec2' : '#fff',\r\n                color: option.name === categoryValue ? '#fff' : '#000'}}>\r\n                <FontAwesomeIcon icon={option.icon} size='lg' style={{fontSize: '30px', marginBottom: '10px'}} />\r\n                {option.name}\r\n            </Col>  \r\n        )\r\n    }\r\n\r\n    const options = [\r\n        { name: 'Temperature', value: 1, icon: faTemperatureHalf },\r\n        { name: 'Length', value: 2, icon: faRulerCombined },\r\n        { name: 'Area', value: 3, icon: faChartArea },\r\n        { name: 'Weight', value: 4, icon: faWeightHanging },\r\n        { name: 'Volume', value: 5, icon: faFlask },\r\n        { name: 'Currency', value: 6, icon: faSterlingSign },\r\n        { name: 'Time', value: 7, icon: faClock },\r\n        { name: 'Speed', value: 8, icon: faGaugeHigh },\r\n        { name: 'Power', value: 9, icon: faBolt },\r\n        { name: 'Angle', value: 10, icon: faAngleRight },\r\n        { name: 'Data', value: 11, icon: faServer },\r\n        { name: 'Fuel', value: 12, icon: faGasPump },\r\n      ];\r\n\r\n      /* define lists here with units for each unit category */\r\n    \r\n      const units = {\r\n        'Temperature': ['Celsius', 'Farenheit', 'Kelvin'],\r\n        'Length': ['Meter', 'Kilometer', 'Centimeter', 'Millimeter', 'Inch', 'Foot', 'Yard', 'Mile', 'Nautical Mile','Nanometre'],\r\n        'Area': ['Square Metre', 'Square Kilometer', 'Square Inch', 'Square Foot', 'Square Yard', 'Square Mile', 'Acre', 'Hectare'],\r\n        'Weight': ['Miligram', 'Gram', 'Kilogram', 'Tonne', 'Ounce', 'Pound', 'Stone', 'Short Ton', 'Metric Ton'],\r\n        'Volume': ['Cubic Meter', 'Cubic Centimeter', 'Cubic Millimeter', 'Cubic Inch', 'Cubic Foot', 'Cubic Yard', 'Milliliter', 'Liter', 'Kiloliter', 'Dal', 'Peck', 'Gallon', 'Barrel', 'Hogshead', 'Butt', 'Tun'],\r\n        'Currency': ['United States Dollar (USD)', 'Euro (EUR)', 'Japanese Yen (JPY)', 'British Pound (GBP)', 'Australian Dollar (AUD)', 'Canadian Dollar (CAD)', 'Swiss Franc (CHF)', 'Chinese Yuan Renminbi (CNY)', 'Indian Rupee (INR)', 'Brazilian Real (BRL)', 'Russian Ruble (RUB)', 'Mexican Peso (MXN)'],\r\n        'Time': ['Nanosecond (ns)', 'Microsecond (µs)', 'Millisecond (ms)', 'Second (s)', 'Minute (min)', 'Hour (h)', 'Day (d)', 'Week (wk)', 'Month (mo)', 'Year (yr)', 'Decade', 'Century', 'Millennium'],\r\n        'Speed': ['Meters per Second (m/s)', 'Kilometers per Hour (km/h)', 'Miles per Hour (mph)', 'Feet per Second (fps)', 'Knots', 'Mach'],\r\n        'Power': ['Watts (W)', 'Kilowatts (kW)', 'Megawatts (MW)', 'Gigawatts (GW)', 'Terawatts (TW)', 'Petawatts (PW)', 'Exawatts (EW)', 'Zettawatt (ZW)', 'Yottawatts (YW)'],\r\n        'Angle': ['Degree (°)','Minute (′)', 'Second (″)', 'Radian (rad)', 'Gradian (grad)', 'Turn (t)', 'Revolution (rev)'],\r\n        'Data': ['Bit', 'Byte', 'Kilobyte (KB)', 'Megabyte (MB)', 'Gigabyte (GB)', 'Terabyte (TB)', 'Petabyte (PB)', 'Exabyte (EB)', 'Zettabyte (ZB)', 'Yottabyte (YB)'],\r\n        'Fuel': ['Gallon (gal)', 'Barrel (bbl)', 'Cubic Meter (m³)', 'Liter (L)', 'Kiloliter (KL)', 'Ton (t)', 'British Thermal Unit (BTU)', 'Joule (J)', 'Therm (thm)', 'Megawatt-hour (MWh)', 'Gigawatt-hour (GWh)', 'Terawatt-hour (TWh)', 'Petawatt-hour (PWh)']\r\n\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center' style={{backgroundColor: '#D9D9D9', overflowX: \"scroll\"}}>\r\n    \r\n            {options.map((option, idx) => (\r\n                <UnitOption option={option} />\r\n\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default UnitCategoryOptions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}